{{!-- All of this will be injected into {{{body}}} inside the main-layout.handlebars --}}
<main>
  {{!-- handlebars helpers - #if: https://handlebarsjs.com/guide/builtin-helpers.html#if 
  Note the #if cannot take in conditional statements that need to be derived, it directly takes in values like 
  true, false, undefined, null, [], 0, etc. These values can be sent over onto the template --}}
  {{!-- Therefore, the following is NOT possible in handlebars:
    #if products.length > 0
  But, if we have `products.length > 0`'s value being sent to this template, then we can use that as our condition check, i.e., --}}
  {{#if hasNoProducts}}
    <h1>No Products Found!</h1>
  {{else}} {{!-- Usage of `else` in handlebars --}}
    {{#each products}} {{!-- looping structure in handlebars: https://handlebarsjs.com/guide/builtin-helpers.html#each --}}
      <div class="grid">
        <article class="card product-item">
          <header class="card__header">
            {{!-- Each item in the `products` collection can be accessed using the `this` keyword which is 
            available inside the `each` construct --}}
            <h1 class="product__title">{{this.title}}</h1>
          </header>
          <div class="card__image">
            <img src="http://james-hare.com/images/imagenotfound.jpg" alt="Image for 'Image Not Found'">
          </div>
          <div class="card__content">
            <h2 class="product__price">$19.99</h2>
            <p class="product__description">A very interesting book about so many even more interesting things!</p>
          </div>
          <div class="card__actions">
            <button class="btn">Add to Cart</button>
          </div>
        </article>
      </div>
    {{/each}}
  {{/if}} {{!-- This is how we end an if-else in handlebars --}}
</main>
